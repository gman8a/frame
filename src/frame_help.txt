.L 0
.o-
.T
FRAME  by: Gary Argraves - 9612.15,   (c) KAS Software Collection
.P 1
.m
usage: FRAME [/fInFile /bBlkName /Off /Repeat /C#dStr] [<InFile] [>OutFile]

/File     Input file      /Fjob1       File re-direction doesn't work GOTO Op.
/Block    Name to begin   /BUDGET      Any Case Sensitive Name.
/OFF      evaluation      /O           turn Math EVALuation off.
/REPEAT   1st line        /R3          Repeat the 1st input line # times.
/Comment  write-thur      /C2!         PARSED Comments will wrt.thru; _=space.
.m

DOT cmds. alway begin in column 1.
==================================
Top/Middle/Bottom line    .T or .t     up/low case=double/single horizontal
Pad lines                 .P 5         add white space.
Look      of characters   .L 0         0/sing.1/dbl.2/off 3&4/+-= horz/vert.
Include   FRAME file      .i fn Block  the default ext=.FRM
Comment   ignore line     .c hello     but math strings will be evaluated.
End       session         .e           end the FRAME session.
Sum       accum#,columns  .s 1 50 70   A#1, column, balance output col.& reset.
Define    macros          .d ten=10    to be substituted in eval.math str.
View      macros          .v           view all macros definitions.
OFF       same as /Oñ     .o+          toggle math evaluation on/off.
.o-
Eval.     char.~          .q #         change default math eval.delimeter.
Formfeed  output          .f           output the FF=^L chr. or other ctrl.
Goto      Label           .g L1 L2 L3  On last math evaluation < = >  zero.
Label     for GOTO cmd    .:L1         NO spaces allowed here.
White     space,no frame  .w 5         (also .x) output 5 blank lines.
Truncate  lines to length .y 77        no line will be greater than 77 chr.
zField    Dflt.Field Mod. .z 8:2       if NOT specified, for EXP.use 1:1 or 2:2
"         dotCmd.wrt.thur ." hello     same as NO dot cmd
UnderScore or Break Line  .u 20 3 fn B1 B2 B3 break_COL&LEN, incl_FILE, BLKS123
Match     str.in col      .= 10 Hello fn B1 B2  then pre-fn:Blk1 post-fn:Blk2
Run       shell program   .r dir/w     run any external program
SOB/EOB   Start/End_of_Blk  .BUDGET    use to mark Blocks.
SOB/EOB   Start/End_of_Blk ..BUDGET    BEST way to mark Blocks.
Subst.Sum  registers 0-9  %s1:12:2%   subst.running sum; NO reg.# = #0.
Subst.Eval register 0-99  %v98:12:2%  math evaluation w/field modifier.
Subst.time  w/o param.    %d% or %t%  current DATE or TIME strings.

Subst.dollar and cents    %$%         current value to money strings.

~1/3~       Math Evaluation strings are enclosed in tildas ~~.
`1/3`       Same as above except Macros are NOT expanded.
~F1=10*10~  Math Var. F1-F99 may be used to save numbers.
 F0 to F9   Evaluation var.F0-F9 ALWAYS mirror the Column SUMS.
 TAB char.  ^I are expanded to 8 spaces.
 .u 0       will shut break checking off.
 .= 0 TEST  will match TEST anywhere.
 .= 0       will shut match checking off.

If no blk_name is specified, a blk_name could be seen as a dot cmd.
Math Eval. can be performed on the same line as a dot cmd.
Summing is NOT performed on any Dot command.
Use include filename '=' if block is in current frame file, .i = BlkName
Use "}" to maintain column line positions thur macro substitutions.
Use "{" to truncate output w/o end_frame, For use w/ print ctrl. codes.
Other ctrl.char. can be output with the .FormFeed cmd.
GOTO cmd.& LABELed lines can have math eval.str.on same line, .g [ [ ] `1+1`
GOTO cmd.ONLY scans ahead w/re-directed input, allowing non-unique labels.
To re-direct shelled output use FRAME's cmd.line param. /Ffilename.
Embedded ESCape sequences use a ! as an END of SEQ. delimeter.
Look 9 will NOT FRAME lines, (use ANSI codes to position and color)
use && as EOL marker to append the next line. useful w/echo cmd.>100 char
file I/O direction char. ¯ is subst. w/>>, char.® is subst. w/<<

.B
